The following HTML code represents what I consider to be perfect documentation for a function or method that is found within the Trongate framework:    ---    


<div class="container">
  <h1>attempt_display()</h1>
  <p class="signature">function attempt_display(): void</p>
  <h2>Description</h2>
  <div class="description">
    <p>
      Attempts to display a page by reading a value from the URL.  If the last segment of the URL is 'edit' the method also verifies if the user is an admin so that permissions may be granted for editing. If no matching record is found in the 'trongate_pages' table, a 404 error page is displayed. Additionally, it ensures that only published pages are displayed unless the page is being edited.
    </p>
  </div>
  <h2>Parameters</h2>
  <table>
    <thead>
      <tr>
        <th>Parameter</th>
        <th>Type</th>
        <th>Description</th>
        <th>Default</th>
        <th>Required</th>
      </tr>
    </thead>
    <tbody>
      <!-- This method does not take any parameters -->
      <tr>
        <td colspan="5">This method does not take any parameters, however, it does attempt to fetch a record from the 'trongate_pages' database table based on a value that is read from the URL.</td>
      </tr>
    </tbody>
  </table>
  <h2>Return Value</h2>
  <table>
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>void</td>
        <td>This method does not return any value.</td>
      </tr>
    </tbody>
  </table>
  <h2>Example Usage</h2>
  <div class="example">
    <pre>// Example Usage not available for this method</pre>
  </div>
</div>.  --- What I've just shown you can be considered as being good HTML documentation for the following method:   ---   

    /**
     * Attempt to display a page based on the URL segment.
     *
     * @return void
     */
    function attempt_display(): void {

        $enable_page_edit = false;
        $this_current_url = rtrim(current_url(), '/');
        $target_segment = get_last_part($this_current_url, '/');

        if ($target_segment === 'edit') {
            $url_segments = explode('/', $this_current_url);
            $target_segment_index = count($url_segments) - 2;
            $target_segment = $url_segments[$target_segment_index];

            // Is this user an 'admin' user?
            $this->module('trongate_tokens');
            $token = $this->trongate_tokens->_attempt_get_valid_token(1);

            if (($token === false) && (strtolower(ENV) === 'dev')) {
                redirect('trongate_pages/manage');
            } else {
                // User is now confirmed as being 'admin'.
                $enable_page_edit = true;                
            }

        }

        $record_obj = $this->model->get_one_where('url_string', $target_segment, 'trongate_pages');

        if ($record_obj === false) {
            // No matching record found on trongate_pages table.
            $this->template('error_404', []);
            return;
        }

        $data = (array) $record_obj;
        $data['enable_page_edit'] = $enable_page_edit;
        $data['targetTable'] = 'trongate_pages';
        $data['recordId'] = $record_obj->id;
        $data['imgUploadApi'] = BASE_URL . 'trongate_pages/submit_image_upload';

        // Produce a 404 page IF this page is not published.
        if (($data['published'] === 0) && ($last_segment !== 'edit')) {
            load('error_404');
            die();
        }

        $data['sample_text'] = $this->sample_text;
        $data['view_module'] = 'trongate_pages';
        $data['view_file'] = 'display';
        $this->template($this->page_template, $data);
    }


---    Please produce some HTML content of the same format as shown above, but for the following function/method:    ---    








